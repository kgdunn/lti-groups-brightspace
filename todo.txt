Groups TODO
--------
Error message if a CSV is blank, or only contains a single row

CSV upload: afters it should force an auto refresh
Student view when there are no groups.
Instructor view if no groups pushed through
Show the actual enrollments in a group
View as student
Upload CSV template with students in the list
Remove the other admin view and consolidate everything into the table?
If you are an instructor, but in student mode: indicate that action is recorded
but nothing has happened (not actually enrolled).

Admin table:
* Reorder row: call the function, and reorder all rows in the database
* but then process teh group id's again
$("#example-table").tabulator({
    rowMoved:function(id, data, row, index){
        //id - the id of the row
        //data - the data for the row
        //row - the DOM element of the row
        //index - new position of row in table
    }
});



Can be prefilled:
Longer term TODO: waitlist functionality

Import names from CSV

What happens to a ``Person`` between two different course instances?
LoggingGS

----
Check what happens if Admin role person uses "View as Student"
Make it prettier: student version
 * iconic?
 * check on mobile?
 * give feedback on what has happened in XHR

Add admin display summary, with links to show the students listed in a group
Admin view to process and uploaded CSV file of given students, and a rough allocation



=====
Setting up on the server

* HTTPS secured URL https://lti.tudelft.nl
* Running Python >= 3.5
* Running Django >= 1.10
* Apache server
* WSGI settings configured in Apache
* Postgresql database
* An email address to email from

# To recreate website:
# -----------
# su postgres
# psql
# DROP DATABASE django_lti_groups_db;
# create database django_lti_groups_db;
# create user django_lti_groups_user;
# ALTER USER django_lti_groups_user WITH PASSWORD '';
# grant all on database django_lti_groups_db to django_lti_groups_user;
# ALTER ROLE django_lti_groups_user SET client_encoding TO 'utf8';
# ALTER ROLE django_lti_groups_user SET default_transaction_isolation TO 'read committed';
# ALTER ROLE django_lti_groups_user SET timezone TO 'UTC';
# \q
#---
# ./manage.py migrate
# ./manage.py createsuperuser
# chmod 777 logfile.txt